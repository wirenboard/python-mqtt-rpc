#!/usr/bin/env python3

import os
import json, time
import pprint
import argparse

try:
    import mosquitto
except ImportError:
    import paho.mqtt.client as mosquitto

from mqttrpc.client import TMQTTRPCClient
from jsonrpc.exceptions import JSONRPCError


def main():
    parser = argparse.ArgumentParser(description="Sample RPC client", add_help=False)
    parser.add_argument(
        "-h", "--host", dest="host", type=str, help="MQTT host", default="localhost"
    )
    parser.add_argument(
        "-p", "--port", dest="port", type=int, help="MQTT port", default="1883"
    )
    parser.add_argument(
        "-u", "--username", dest="username", type=str, help="MQTT username", default=""
    )
    parser.add_argument(
        "-P", "--password", dest="password", type=str, help="MQTT password", default=""
    )
    parser.add_argument(
        "-d",
        "--driver",
        dest="driver",
        type=str,
        help="Driver name",
        default="db_logger",
    )
    parser.add_argument(
        "-s",
        "--service",
        dest="service",
        type=str,
        help="Service name",
        default="history",
    )
    parser.add_argument(
        "-m",
        "--method",
        dest="method",
        type=str,
        help="Method name",
        default="get_channels",
    )
    parser.add_argument(
        "-a", "--args", dest="args", type=str, help="Method arguments", default="{}"
    )
    parser.add_argument(
        "-t", "--timeout", dest="timeout", type=int, help="Timeout", default=10
    )
    args = parser.parse_args()

    client = mosquitto.Client("mqtt-rpc-client-%d" % os.getpid())
    if args.username:
        client.username_pw_set(args.username, args.password)

    client.connect(args.host, args.port)
    client.loop_start()

    rpc_client = TMQTTRPCClient(client)
    client.on_message = rpc_client.on_mqtt_message

    resp = rpc_client.call(
        args.driver, args.service, args.method, json.loads(args.args), args.timeout
    )
    pprint.pprint(resp)


if __name__ == "__main__":
    main()
